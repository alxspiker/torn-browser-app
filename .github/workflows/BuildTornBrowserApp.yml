name: Build Torn Browser App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Allows manual triggering

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      # Windows-specific preparation
      - name: Prepare for Windows build
        if: matrix.os == 'windows-latest'
        run: |
          # Install Windows build tools if needed
          npm install --global windows-build-tools --vs2015 || true

      # macOS-specific preparation
      - name: Prepare for macOS build
        if: matrix.os == 'macos-latest'
        run: |
          # Install necessary macOS dependencies if needed
          # For example, if you need additional code signing tools
          
      # Linux-specific preparation
      - name: Prepare for Linux build
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-x11-0 libxss1 libgconf-2-4 libgtk-3-0 libnss3 libasound2

      # Build step - this uses electron-builder defined in package.json
      - name: Build Electron app
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload Windows artifacts
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: torn-browser-windows
          path: |
            dist/*.exe
            dist/latest.yml

      # Upload macOS artifacts
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: torn-browser-macos
          path: |
            dist/*.dmg
            dist/*.zip
            dist/latest-mac.yml

      # Upload Linux artifacts
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: torn-browser-linux
          path: |
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/latest-linux.yml

  # Create a release when tagged
  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            torn-browser-windows/**
            torn-browser-macos/**
            torn-browser-linux/**
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
